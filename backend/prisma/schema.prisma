// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model usuario {
  id                    String                  @id @default(auto()) @map("_id") @db.ObjectId
  email                 String                  @unique
  rol                   String?
  nombre                String
  apellido              String
  contrasena            String
  historial_operaciones historial_operaciones[]
}

model institucion {
  id                         String           @id @default(auto()) @map("_id") @db.ObjectId
  nombre                     String
  direccion                  String
  contacto_principal         String
  cargo_contacto_principal   String
  tel_contacto_principal     String
  correo_contacto_principal  String
  contacto_secundario        String?
  cargo_contacto_secundario  String?
  tel_contacto_secundario    String?
  correo_contacto_secundario String?
  porcentaje_descuento       Float?
  consignaciones             consignaciones[]
  factura                    factura[]
  cotizaciones               cotizaciones[]
}

model historial_operaciones {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  accion     String
  fecha      DateTime @default(now())
  usuario    usuario  @relation(fields: [id_usuario], references: [id])
  id_usuario String   @db.ObjectId
  recurso    String
  detalle    String
}

model inventario {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  isbn            String
  editorial       String
  titulo          String
  cantidad        Int
  precio_unitario Float
  total           Float
  costo_fob       Float
  total_fob       Float
  estado          String?
  consignaciones  consignaciones[]
}

model retaceo {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  fecha        String
  id_usuario   String
  fac          String
  proveedor    proveedor @relation(fields: [id_proveedor], references: [id])
  id_proveedor String    @db.ObjectId
  descripcion  String
  parcial      Float
}

model proveedor {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  nombre    String
  correo    String
  direccion String
  telefono  String
  retaceo   retaceo[]
}

model consignaciones {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  fecha          DateTime    @default(now())
  inventario     inventario  @relation(fields: [id_libro], references: [id])
  id_libro       String      @db.ObjectId
  cantidad       Int
  estado         String
  id_usuario     String
  detalle        String?
  institucion    institucion @relation(fields: [id_institucion], references: [id])
  id_institucion String      @db.ObjectId
}

model factura {
  id             String              @id @default(auto()) @map("_id") @db.ObjectId
  fecha          DateTime            @default(now())
  num_factura    String
  tipo_documento String
  institucion    institucion         @relation(fields: [id_institucion], references: [id])
  id_institucion String              @db.ObjectId
  articulos      detalle_articulos[]
  descuento      Float?
  id_usuario     String
  estado         String
}

model cotizaciones {
  id                  String              @id @default(auto()) @map("_id") @db.ObjectId
  fecha               DateTime            @default(now())
  institucion         institucion         @relation(fields: [id_institucion], references: [id])
  id_institucion      String              @db.ObjectId
  detalle_articulos   detalle_articulos[]
  id_usuario_solicita String              @db.ObjectId
  estado              String
  aprobado_por        aprobado_por?
}

type detalle_articulos {
  id_inventario   String
  cantidad        Int
  precio_unitario Int
  precio_total    Int
}

type aprobado_por {
  id_usuario       String
  fecha_aprobacion DateTime @default(now())
}
